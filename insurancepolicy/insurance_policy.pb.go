// Code generated by protoc-gen-go. DO NOT EDIT.
// source: insurance_policy.proto

package insurancepolicy

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Users are policy holders
type User struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MobileNumber         string   `protobuf:"bytes,3,opt,name=mobile_number,json=mobileNumber,proto3" json:"mobile_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e65746f52d5f49, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

// Policies data
type Policy struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	MobileNumber         string   `protobuf:"bytes,2,opt,name=mobile_number,json=mobileNumber,proto3" json:"mobile_number,omitempty"`
	Premium              int32    `protobuf:"varint,3,opt,name=premium,proto3" json:"premium,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e65746f52d5f49, []int{1}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Policy) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *Policy) GetPremium() int32 {
	if m != nil {
		return m.Premium
	}
	return 0
}

func (m *Policy) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// To generate a response
type InsuranceResponse struct {
	User                 *User     `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Policies             []*Policy `protobuf:"bytes,2,rep,name=policies,proto3" json:"policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *InsuranceResponse) Reset()         { *m = InsuranceResponse{} }
func (m *InsuranceResponse) String() string { return proto.CompactTextString(m) }
func (*InsuranceResponse) ProtoMessage()    {}
func (*InsuranceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e65746f52d5f49, []int{2}
}

func (m *InsuranceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsuranceResponse.Unmarshal(m, b)
}
func (m *InsuranceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsuranceResponse.Marshal(b, m, deterministic)
}
func (m *InsuranceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsuranceResponse.Merge(m, src)
}
func (m *InsuranceResponse) XXX_Size() int {
	return xxx_messageInfo_InsuranceResponse.Size(m)
}
func (m *InsuranceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InsuranceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InsuranceResponse proto.InternalMessageInfo

func (m *InsuranceResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *InsuranceResponse) GetPolicies() []*Policy {
	if m != nil {
		return m.Policies
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "insurancepolicy.User")
	proto.RegisterType((*Policy)(nil), "insurancepolicy.Policy")
	proto.RegisterType((*InsuranceResponse)(nil), "insurancepolicy.InsuranceResponse")
}

func init() { proto.RegisterFile("insurance_policy.proto", fileDescriptor_13e65746f52d5f49) }

var fileDescriptor_13e65746f52d5f49 = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x92, 0x4b, 0x4f, 0x83, 0x40,
	0x14, 0x85, 0xe5, 0x61, 0xd5, 0xeb, 0xa3, 0xf1, 0x26, 0x2a, 0xba, 0x32, 0xe8, 0x42, 0x37, 0x2c,
	0xda, 0x5f, 0xe0, 0x23, 0x31, 0x2c, 0xd4, 0x66, 0x12, 0x13, 0x77, 0x0d, 0xd0, 0xbb, 0x20, 0x96,
	0x19, 0x32, 0x33, 0x2c, 0xf8, 0x97, 0xfe, 0x24, 0x87, 0xa1, 0xc5, 0xc7, 0xb8, 0xeb, 0xee, 0x72,
	0x38, 0xf7, 0xdc, 0xf3, 0x11, 0xe0, 0xb4, 0xe4, 0xaa, 0x91, 0x19, 0x2f, 0x68, 0x5e, 0x8b, 0x65,
	0x59, 0xb4, 0x49, 0x2d, 0x85, 0x16, 0x38, 0x1e, 0xf4, 0x5e, 0x8e, 0x5f, 0x21, 0x7c, 0x53, 0x24,
	0xf1, 0x08, 0xfc, 0xf4, 0x31, 0xf2, 0x2e, 0xbd, 0x9b, 0x80, 0x99, 0x09, 0x11, 0x42, 0x9e, 0x55,
	0x14, 0xf9, 0x46, 0xd9, 0x63, 0x76, 0xc6, 0x2b, 0x38, 0xac, 0x44, 0x5e, 0x2e, 0x69, 0xce, 0x9b,
	0x2a, 0x27, 0x19, 0x05, 0xf6, 0xe5, 0x41, 0x2f, 0xbe, 0x58, 0x2d, 0xfe, 0x80, 0xd1, 0xcc, 0x46,
	0x3b, 0x91, 0xce, 0xba, 0xef, 0xae, 0x63, 0x04, 0x3b, 0xb5, 0xa4, 0xaa, 0x6c, 0x2a, 0x9b, 0xbe,
	0xcd, 0xd6, 0x8f, 0x5d, 0x23, 0xdd, 0xd6, 0x14, 0x85, 0x7d, 0xa3, 0x6e, 0x8e, 0x15, 0x1c, 0xa7,
	0x6b, 0x20, 0x46, 0xaa, 0x16, 0x5c, 0x11, 0xde, 0x42, 0xd8, 0x18, 0x24, 0x7b, 0x79, 0x7f, 0x72,
	0x92, 0xfc, 0x41, 0x4e, 0x3a, 0x5e, 0x66, 0x2d, 0x38, 0x85, 0x5d, 0x2b, 0x96, 0xa4, 0x4c, 0x9b,
	0xc0, 0xd8, 0xcf, 0x1c, 0x7b, 0x4f, 0xc3, 0x06, 0xe3, 0xe4, 0xd3, 0x83, 0xf1, 0x70, 0x75, 0xc5,
	0xfa, 0x0e, 0xe7, 0x4f, 0xa4, 0x1f, 0x04, 0xd7, 0x59, 0xa1, 0xef, 0xf8, 0x62, 0xb6, 0x32, 0xdf,
	0xb7, 0xe9, 0x02, 0xff, 0xaf, 0x70, 0x11, 0x3b, 0xb2, 0xc3, 0x12, 0x6f, 0x61, 0x01, 0xd7, 0xdf,
	0xc9, 0xea, 0x57, 0xf4, 0xf3, 0xcf, 0x0f, 0xb7, 0xc9, 0x91, 0x7c, 0x64, 0xff, 0x8e, 0xe9, 0x57,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x73, 0x14, 0x6d, 0x37, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InsurancePolicyClient is the client API for InsurancePolicy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InsurancePolicyClient interface {
	// A simple RPC.
	//
	// Returns a policy holder and its policies by userID.
	//
	GetContactAndPoliciesById(ctx context.Context, in *User, opts ...grpc.CallOption) (*InsuranceResponse, error)
	// A simple RPC.
	//
	// Returns a single policyholder and its policies by MobileNumber.
	//
	GetContactsAndPoliciesByMobileNumber(ctx context.Context, in *User, opts ...grpc.CallOption) (*InsuranceResponse, error)
}

type insurancePolicyClient struct {
	cc *grpc.ClientConn
}

func NewInsurancePolicyClient(cc *grpc.ClientConn) InsurancePolicyClient {
	return &insurancePolicyClient{cc}
}

func (c *insurancePolicyClient) GetContactAndPoliciesById(ctx context.Context, in *User, opts ...grpc.CallOption) (*InsuranceResponse, error) {
	out := new(InsuranceResponse)
	err := c.cc.Invoke(ctx, "/insurancepolicy.InsurancePolicy/GetContactAndPoliciesById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *insurancePolicyClient) GetContactsAndPoliciesByMobileNumber(ctx context.Context, in *User, opts ...grpc.CallOption) (*InsuranceResponse, error) {
	out := new(InsuranceResponse)
	err := c.cc.Invoke(ctx, "/insurancepolicy.InsurancePolicy/GetContactsAndPoliciesByMobileNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InsurancePolicyServer is the server API for InsurancePolicy service.
type InsurancePolicyServer interface {
	// A simple RPC.
	//
	// Returns a policy holder and its policies by userID.
	//
	GetContactAndPoliciesById(context.Context, *User) (*InsuranceResponse, error)
	// A simple RPC.
	//
	// Returns a single policyholder and its policies by MobileNumber.
	//
	GetContactsAndPoliciesByMobileNumber(context.Context, *User) (*InsuranceResponse, error)
}

// UnimplementedInsurancePolicyServer can be embedded to have forward compatible implementations.
type UnimplementedInsurancePolicyServer struct {
}

func (*UnimplementedInsurancePolicyServer) GetContactAndPoliciesById(ctx context.Context, req *User) (*InsuranceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContactAndPoliciesById not implemented")
}
func (*UnimplementedInsurancePolicyServer) GetContactsAndPoliciesByMobileNumber(ctx context.Context, req *User) (*InsuranceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContactsAndPoliciesByMobileNumber not implemented")
}

func RegisterInsurancePolicyServer(s *grpc.Server, srv InsurancePolicyServer) {
	s.RegisterService(&_InsurancePolicy_serviceDesc, srv)
}

func _InsurancePolicy_GetContactAndPoliciesById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InsurancePolicyServer).GetContactAndPoliciesById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/insurancepolicy.InsurancePolicy/GetContactAndPoliciesById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InsurancePolicyServer).GetContactAndPoliciesById(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _InsurancePolicy_GetContactsAndPoliciesByMobileNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InsurancePolicyServer).GetContactsAndPoliciesByMobileNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/insurancepolicy.InsurancePolicy/GetContactsAndPoliciesByMobileNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InsurancePolicyServer).GetContactsAndPoliciesByMobileNumber(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _InsurancePolicy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "insurancepolicy.InsurancePolicy",
	HandlerType: (*InsurancePolicyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetContactAndPoliciesById",
			Handler:    _InsurancePolicy_GetContactAndPoliciesById_Handler,
		},
		{
			MethodName: "GetContactsAndPoliciesByMobileNumber",
			Handler:    _InsurancePolicy_GetContactsAndPoliciesByMobileNumber_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "insurance_policy.proto",
}
